{"meta":{"title":"Amit Anand","subtitle":"Few things to share","description":null,"author":"Amit Anand","url":"http://blog.amitanand.net"},"pages":[{"title":"about","date":"2016-07-09T17:08:55.000Z","updated":"2016-07-09T17:47:36.602Z","comments":false,"path":"about/index.html","permalink":"http://blog.amitanand.net/about/index.html","excerpt":"","text":"Hello My name is amit anand"},{"title":"resume","date":"2016-07-09T17:45:51.000Z","updated":"2016-07-09T17:47:03.362Z","comments":false,"path":"resume/index.html","permalink":"http://blog.amitanand.net/resume/index.html","excerpt":"","text":"wola!!"}],"posts":[{"title":"Enable HA for HiveServer2","slug":"hive-ha","date":"2016-07-09T20:10:35.094Z","updated":"2016-07-09T20:10:35.086Z","comments":true,"path":"2016/07/09/hive-ha/","link":"","permalink":"http://blog.amitanand.net/2016/07/09/hive-ha/","excerpt":"In this blog I am going to show you how to enable High Availability for HiveServer2. The HiveServer2, like HDFS NameNode, does not have any limit on number of servers that can be added to HA configuration. Also it doesn’t provide any failover mechanism. A client will have to reconnect, in case a connetion to current HiveServer2 is lost. Below are the requirements to enable High Availability for HiveServer2.","text":"In this blog I am going to show you how to enable High Availability for HiveServer2. The HiveServer2, like HDFS NameNode, does not have any limit on number of servers that can be added to HA configuration. Also it doesn’t provide any failover mechanism. A client will have to reconnect, in case a connetion to current HiveServer2 is lost. Below are the requirements to enable High Availability for HiveServer2. ZooKeeperZookeeper is used to store information about each HS2 instarnce that is launched and registered with Zookeeper. A client, upon connection request, gets one of the registered HS2 instance. Multiple HiveServer2 instancesTo enable HA more than one instance of HS2 is required. Multiple instances can run either on the same server with different port for each instance or on two different machines using same port number. If one of the instance fails, Zookeeper will return the next active HS2 instance. Running multiple instances provides following benefits: High Availability Load Balancing Rolling Upgrade It is also possible to have HS2 instances configured with different authentication scheme. For example, four instances can be configured with first two instances running on port 10000 using Kerberos authentication and other two running on port 10001 using LDAP authentication. ConfigurationLet’s look at the configuration that is needed for running multiple instances of HS2 Parameter Description hive.zookeeper.quorum The list of Zookeeper servers to talk to. hive.zookeeper.session.timeout Zookeeper client’s session timeout. The client is disconnected, and as a result, all locks released, if a heartbeat is not sent in the timeout hive.zookeeper.namespace The parent node under which all Zookeeper nodes are created. hive.server2.support.dynamic.service.discovery Set to true to enable HiveServer2 dynamic service discovery for its clients Sample configuration:12345678910111213141516&lt;property&gt; &lt;name&gt;hive.zookeeper.quorum&lt;/name&gt; &lt;value&gt;f-bcpc-vm1.bcpc.example.com:2181,f-bcpc-vm2.bcpc.example.com:2181,f-bcpc-vm3.bcpc.example.com:2181&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;hive.zookeeper.session.timeout&lt;/name&gt; &lt;value&gt;600000&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;hive.zookeeper.namespace&lt;/name&gt; &lt;value&gt;hiveserver2&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;hive.server2.support.dynamic.service.discovery&lt;/name&gt; &lt;value&gt;true&lt;/value&gt;&lt;/property&gt; At this stage after adding the configuration restart HiveServer2 instance. Please do take a moment to look at Znodes created under /hiveserver2 in Zookeeper. After enabling HA one can connect to HS using syntax given below:123456789101112131415161718192021222324ubuntu@bcpc-vm8:~$ beeline -u \"jdbc:hive2://f-bcpc-vm1.bcpc.example.com:2181,f-bcpc-vm2.bcpc.example.com:2181,f-bcpc-vm3.bcpc.example.com:2181/default;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;principal=hive/f-bcpc-vm3.bcpc.example.com@BCPC.EXAMPLE.COM\"Connecting to jdbc:hive2://f-bcpc-vm1.bcpc.example.com:2181,f-bcpc-vm2.bcpc.example.com:2181,f-bcpc-vm3.bcpc.example.com:2181/default;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;principal=hive/f-bcpc-vm3.bcpc.example.com@BCPC.EXAMPLE.COMConnected to: Apache Hive (version 1.2.1.2.3.4.0-3485)Driver: Hive JDBC (version 1.2.1.2.3.4.0-3485)Transaction isolation: TRANSACTION_REPEATABLE_READBeeline version 1.2.1.2.3.4.0-3485 by Apache Hive0: jdbc:hive2://f-bcpc-vm1.bcpc.example.com:2&gt; select * from test limit 10;+----------+-------------+--+| test.id | test.idval |+----------+-------------+--+| id0001 | value0001 || id0002 | value0002 || id0003 | value0003 || id0004 | value0004 || id0005 | value0005 || id0006 | value0006 || id0007 | value0007 || id0008 | value0008 || id0009 | value0009 || id0010 | value0010 |+----------+-------------+--+10 rows selected (2.102 seconds)","categories":[{"name":"Hive","slug":"Hive","permalink":"http://blog.amitanand.net/categories/Hive/"}],"tags":[{"name":"Hive","slug":"Hive","permalink":"http://blog.amitanand.net/tags/Hive/"},{"name":"HIVEQL","slug":"HIVEQL","permalink":"http://blog.amitanand.net/tags/HIVEQL/"},{"name":"SQL","slug":"SQL","permalink":"http://blog.amitanand.net/tags/SQL/"},{"name":"Hiveserver2","slug":"Hiveserver2","permalink":"http://blog.amitanand.net/tags/Hiveserver2/"},{"name":"HS2","slug":"HS2","permalink":"http://blog.amitanand.net/tags/HS2/"}]}]}